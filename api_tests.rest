### Variables
@baseUrl = http://localhost:8000

### Create a new user
POST {{baseUrl}}/api/users/
Content-Type: application/json

{
  "email": "test@example.com",
  "full_name": "Test User",
  "password": "password123"
}

### Login
# This request captures the access_token from the response
# @name login
POST {{baseUrl}}/api/login
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "password123"
}

###

### Logout
POST {{baseUrl}}/api/logout
Authorization: Bearer {{login.response.body.access_token}}

### Access protected route
GET {{baseUrl}}/api/protected
Authorization: Bearer {{login.response.body.access_token}}

### Get all users (protected route)
GET {{baseUrl}}/api/users/
Authorization: Bearer {{login.response.body.access_token}}

### Create a new allowed host
POST {{baseUrl}}/api/allowed-hosts/
Content-Type: application/json
Authorization: Bearer {{login.response.body.access_token}}

{
  "origin": "127.0.0.1"
}

### Get all allowed hosts for current user
GET {{baseUrl}}/api/allowed-hosts/
Authorization: Bearer {{login.response.body.access_token}}

### Delete an allowed host (replace {id} with an actual ID)
DELETE {{baseUrl}}/api/allowed-hosts/1
Authorization: Bearer {{login.response.body.access_token}}

### Get all user requests
GET {{baseUrl}}/api/requests/
Authorization: Bearer {{login.response.body.access_token}}

### Get user requests with pagination and filtering
GET {{baseUrl}}/api/requests/?page=1&limit=10&url=example.com
Authorization: Bearer {{login.response.body.access_token}}

### Get all chrome sessions for current user
GET {{baseUrl}}/api/chrome-sessions/
Authorization: Bearer {{login.response.body.access_token}}

### Flaresolver API
POST {{baseUrl}}/api/v1
Content-Type: application/json

{
  "cmd": "request.get",
  "url" : "https://kosmix.fr"
}

### Flaresolver API (Background processing)
POST {{baseUrl}}/api/v1
Content-Type: application/json

{
  "cmd": "request.get",
  "url" : "https://kosmix.fr"
}

### Check task status (replace with actual task_id from response)
@taskId = e50aa28d-392a-4e07-9a01-078e9efaf597
GET {{baseUrl}}/api/v1/tasks/{{taskId}}

### Check task status (without waiting)
GET {{baseUrl}}/api/v1/tasks/{{taskId}}

### Check task status (with waiting - polls until complete or timeout)
GET {{baseUrl}}/api/v1/tasks/{{taskId}}?wait=true&timeout=60

### Get screenshot for a request (replace with actual request_id)
GET {{baseUrl}}/api/screenshots/20
Authorization: Bearer {{login.response.body.access_token}}
